#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property serverConnect ${nuklei.streams("target", "tcp#any")}
property serverConnectReply ${nuklei.streams("tcp", "target#partition")}

property newServerConnectReplyId1 ${nuklei:newStreamId()}
property newServerConnectReplyId2 ${nuklei:newStreamId()}

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverConnect.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(serverConnect.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverConnectId1)
read [0x03] "tcp"
read ([0..8]:serverConnectRef)
read ([0..8]:correlationId1)
read ([0..7]:localAddress)
read ([0..7]:remoteAddress1)

write [0x40 0x00 0x00 0x02]
write ${serverConnectId1}
write [0x00 0x02 0x00 0x00]
write [0x00 0x02 0x00 0x00]
write flush

write notify WINDOW_ONE_UPDATED

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverConnectId2)
read [0x03] "tcp"
read ([0..8]:serverConnectRef)
read ([0..8]:correlationId2)
read ([0..7]:localAddress)
read ([0..7]:remoteAddress2)

write [0x40 0x00 0x00 0x02]
write ${serverConnectId2}
write [0x00 0x02 0x00 0x00]
write [0x00 0x02 0x00 0x00]
write flush

write notify WINDOW_TWO_UPDATED

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverConnectReply.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(serverConnectReply.buffer)}
connected


write await WINDOW_ONE_UPDATED

# Stream 1 BEGIN
write [0x00 0x00 0x00 0x01]
write ${newServerConnectReplyId1}
write [0x06] "target"
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${correlationId1}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectReplyId1}
read [0..4]
read [0..4]

write await WINDOW_TWO_UPDATED

# Stream 2 BEGIN
write [0x00 0x00 0x00 0x01]
write ${newServerConnectReplyId2}
write [0x06] "target"
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${correlationId2}
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectReplyId2}
read [0..4]
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newServerConnectReplyId1}
write [0x00 0x0d]
write "server data 1"
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectReplyId1}
read [0..4] # TODO: read int 13 option byteorder native
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newServerConnectReplyId2}
write [0x00 0x0d]
write "server data 2"
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectReplyId2}
read [0..4]
read [0..4]

