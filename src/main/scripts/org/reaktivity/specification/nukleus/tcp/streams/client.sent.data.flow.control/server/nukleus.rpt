#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newServerConnectRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property serverConnect ${nuklei.streams("target", "tcp#any")}
property serverConnectReply ${nuklei.streams("tcp", "target#partition")}

property newServerConnectId ${nuklei:newStreamId()}
property newCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverConnect.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(serverConnect.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newServerConnectId}
write [0x03] "tcp"
write ${newServerConnectRef}
write ${newCorrelationId}
write [0x01] [0x7f 0x00 0x00 0x01]
write [0x1f 0x90]
write [0x01] [0x7f 0x00 0x00 0x01]
write [0x9f 0x90]
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectId}
read [0..4]
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newServerConnectId}
write [0x00 0x06]
write "client"
write flush

read [0x40 0x00 0x00 0x02]
read ${newServerConnectId}
read [0..4]
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newServerConnectId}
write [0x00 0x05]
write " data"
write flush

close
closed

connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(serverConnectReply.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(serverConnectReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:serverConnectReplyId)
read [0x06] "target"
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newCorrelationId}

close
closed
